// text drawing
#include "Font.h"
#include "Color.h"

using namespace Lib3D;


#if USE_TXT

#define RAW_X 432        // size of data row X
#define CHAR_COUNT 43    // number of char defined

// font pixel intensity (max = 8)
const unsigned char FontData[RAW_X*FONT_Y] = {
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,2,6,7,7,6,2,0,0,0,0,1,6,3,0,0,0,0,2,6,7,7,6,3,0,0,0,0,4,7,7,7,6,0,0,0,0,0,0,0,3,7,7,0,0,0,3,7,7,7,7,7,7,5,0,0,0,0,0,5,7,1,0,0,0,3,7,7,7,7,7,7,7,7,3,0,0,6,7,7,7,6,0,0,0,0,3,6,7,7,7,4,0,0,0,0,0,0,0,0,1,5,0,0,0,0,0,7,7,7,7,6,3,0,0,0,0,0,0,0,4,7,7,7,7,1,0,7,7,6,2,0,0,0,0,0,0,0,7,7,6,6,6,6,6,7,3,0,5,7,7,7,7,7,7,6,0,0,0,0,1,6,7,7,6,3,0,0,0,3,7,0,0,0,0,0,0,1,7,1,1,7,7,7,7,7,7,6,1,0,0,3,7,7,7,7,7,7,6,0,0,5,5,0,0,0,1,6,5,0,5,5,0,0,0,0,0,0,0,0,0,4,7,1,0,0,0,1,7,3,0,0,0,5,7,1,0,0,0,0,0,0,3,6,0,0,0,0,0,4,6,7,7,7,6,3,0,0,1,7,7,7,7,5,0,0,0,0,0,0,3,6,7,7,7,6,3,0,0,0,0,6,7,7,7,6,1,0,0,0,0,0,0,0,0,3,5,5,4,1,0,0,5,7,7,7,7,7,7,7,7,7,0,3,6,0,0,0,0,0,0,3,7,0,0,5,6,0,0,0,0,0,2,7,3,3,7,2,0,0,0,0,3,7,0,0,0,0,0,6,5,0,5,6,1,0,0,0,0,0,4,7,1,6,5,0,0,0,0,0,2,7,1,0,7,7,7,7,7,7,7,7,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,1,7,6,2,1,5,7,1,0,0,2,6,7,3,0,0,0,2,7,6,2,2,6,7,1,0,0,3,7,3,1,2,6,6,0,0,0,0,0,1,6,7,7,0,0,0,2,7,3,1,1,1,1,0,0,0,0,0,5,7,2,0,0,0,0,0,1,1,1,1,1,3,7,6,0,0,6,6,2,1,3,7,3,0,0,2,7,5,2,2,6,7,3,0,0,0,0,0,0,1,6,7,2,0,0,0,0,7,6,1,2,5,7,5,0,0,0,0,0,5,7,4,1,4,7,1,0,7,6,6,7,6,2,0,0,0,0,0,6,3,3,3,3,3,3,0,0,0,5,6,3,1,1,1,3,5,0,0,0,0,6,6,2,2,6,7,1,0,0,3,7,0,0,0,0,0,0,3,7,0,0,1,1,4,7,1,3,3,0,0,0,0,1,1,3,7,3,1,1,0,0,5,5,0,0,0,6,7,1,0,5,5,0,0,0,0,0,0,0,0,0,7,7,3,0,0,0,4,7,5,0,0,0,5,7,6,0,0,0,0,0,0,2,7,1,0,0,0,6,7,4,2,1,2,6,7,3,0,1,7,3,1,3,6,6,0,0,0,1,6,7,4,2,1,2,6,7,5,0,0,0,7,3,2,4,6,7,5,0,0,0,0,0,2,6,6,5,5,6,6,0,0,0,0,1,1,6,6,1,1,2,3,0,3,7,0,0,0,0,0,0,3,7,0,0,4,7,0,0,0,0,0,6,6,0,1,7,4,0,0,0,0,6,7,2,0,0,0,1,7,3,0,1,6,6,0,0,0,0,2,7,5,0,3,7,2,0,0,0,0,6,6,0,0,1,1,1,1,1,1,2,7,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,6,6,0,0,0,0,6,6,0,0,5,5,7,3,0,0,0,3,4,0,0,0,0,7,3,0,0,0,0,0,0,0,4,7,0,0,0,0,0,6,6,4,7,0,0,0,3,7,0,0,0,0,0,0,0,0,0,4,7,2,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,1,7,2,0,0,0,5,5,0,0,6,6,0,0,0,0,6,6,0,0,0,0,0,0,6,7,7,3,0,0,0,0,7,5,0,0,0,3,7,0,0,0,0,3,7,2,0,0,0,3,0,0,7,3,0,3,6,7,5,0,0,0,0,5,3,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,6,6,1,0,0,0,1,0,0,0,5,7,1,0,0,0,0,0,3,7,0,0,0,0,4,5,0,0,0,0,0,0,0,0,0,1,7,1,0,0,0,0,5,5,0,0,6,7,3,0,0,5,5,0,0,0,0,0,0,0,0,1,7,7,4,0,0,0,6,7,6,0,0,0,4,7,7,5,0,0,0,0,0,1,7,3,0,0,4,7,2,0,0,0,0,0,6,6,0,1,7,1,0,0,1,7,2,0,0,6,6,1,0,0,0,0,0,5,7,1,0,0,7,3,0,0,0,3,7,4,0,0,0,2,7,3,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,3,7,0,0,0,0,0,0,3,7,0,0,2,7,2,0,0,0,1,7,4,0,0,6,6,0,0,0,2,7,7,3,0,0,0,3,7,1,0,0,1,7,5,0,0,0,6,6,0,0,0,6,6,0,0,0,2,7,2,0,0,0,0,0,0,0,2,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,
1,7,2,0,0,0,0,3,7,0,0,0,0,7,3,0,0,0,0,0,0,0,0,1,7,2,0,0,0,0,0,0,0,6,6,0,0,0,0,3,7,2,3,7,0,0,0,3,7,3,6,7,6,4,0,0,0,1,7,2,0,0,0,0,0,0,0,0,0,0,0,4,7,1,0,0,1,7,3,0,0,0,6,5,0,0,7,3,0,0,0,0,2,7,1,0,0,0,0,4,7,4,7,5,0,0,0,0,7,5,0,0,0,1,7,1,0,0,1,7,5,0,0,0,0,0,0,0,6,3,0,0,0,5,7,5,0,0,0,5,3,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,2,7,3,0,0,0,0,0,0,0,0,5,7,1,0,0,0,0,0,3,7,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,1,7,1,0,0,0,0,5,5,0,5,7,5,0,0,0,5,5,0,0,0,0,0,0,0,0,3,7,7,5,0,0,0,7,7,7,0,0,0,3,7,3,7,2,0,0,0,0,1,7,3,0,0,7,4,0,0,0,0,0,0,2,7,1,1,7,1,0,0,0,7,3,0,3,7,1,0,0,0,0,0,0,0,6,5,0,0,7,3,0,0,0,0,4,7,0,0,0,5,6,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,3,7,0,0,0,0,0,0,3,7,0,0,0,7,4,0,0,0,4,7,1,0,0,4,7,1,0,0,5,7,6,5,0,0,0,6,6,0,0,0,0,4,7,4,0,6,7,1,0,0,0,1,7,3,0,0,6,6,0,0,0,0,0,0,0,2,7,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,2,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,
3,7,0,0,0,0,0,1,7,1,0,0,0,7,3,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,3,5,6,7,3,0,0,0,1,7,5,0,3,7,0,0,0,4,7,7,6,3,4,7,4,0,0,5,6,3,5,5,3,0,0,0,0,0,0,0,0,7,4,0,0,0,0,6,7,5,4,6,6,1,0,0,7,4,0,0,0,0,1,7,1,0,0,0,1,7,6,0,6,6,0,0,0,0,7,5,0,0,0,5,7,0,0,0,6,6,0,0,0,0,0,0,0,0,5,3,0,0,0,0,5,7,2,0,0,6,3,0,1,1,2,3,3,0,0,5,6,3,5,5,5,3,0,0,0,6,6,0,0,0,0,0,0,0,0,0,5,7,1,0,0,0,0,0,3,7,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,1,7,1,0,0,0,0,5,5,5,7,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,5,7,5,6,0,0,3,7,4,7,0,0,0,3,7,0,6,7,1,0,0,0,0,7,3,0,4,7,0,0,0,0,0,0,0,1,7,1,1,7,0,0,0,3,7,2,0,6,4,0,0,0,0,0,0,0,0,4,7,0,0,7,3,0,0,0,0,2,7,1,0,0,4,7,4,2,1,0,0,0,0,0,0,0,0,0,4,5,0,0,0,0,0,3,7,0,0,0,0,0,0,3,7,0,0,0,6,6,0,0,0,6,6,0,0,0,2,7,3,0,0,7,5,5,5,0,0,0,7,4,0,0,0,0,0,6,7,5,7,3,0,0,0,0,0,4,6,0,1,7,4,0,0,0,0,0,0,0,6,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,
3,7,0,0,0,0,0,1,7,1,0,0,1,7,2,0,0,0,0,0,0,2,6,6,1,0,0,0,0,1,6,7,7,5,0,0,0,0,6,6,0,0,3,7,0,0,0,5,7,3,0,0,0,4,7,0,0,7,7,6,5,6,7,6,0,0,0,0,0,0,4,7,1,0,0,0,0,1,7,7,7,7,6,0,0,0,4,7,3,0,0,2,6,7,0,0,0,0,6,7,2,0,5,7,0,0,0,0,7,6,1,2,5,7,4,0,0,0,7,3,0,0,0,0,0,0,0,0,5,3,0,0,0,0,0,6,5,0,0,7,7,7,7,7,7,7,6,0,0,5,7,7,6,5,6,7,1,0,0,7,2,0,0,2,3,5,5,5,2,0,5,7,0,1,3,5,6,7,7,6,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,1,7,1,0,0,0,0,5,6,7,5,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,6,6,4,7,0,0,6,6,2,7,1,0,0,3,7,0,0,6,6,0,0,0,0,7,3,0,6,5,0,0,0,0,0,0,0,1,7,1,2,7,1,1,4,7,6,0,1,7,2,0,0,0,0,0,0,0,0,2,7,1,0,7,2,0,0,0,0,6,6,0,0,0,0,6,7,7,7,7,6,1,0,0,0,0,0,0,3,6,0,0,0,0,0,3,7,0,0,0,0,0,0,5,6,0,0,0,4,7,1,0,1,7,4,0,0,0,0,7,5,0,2,7,3,3,7,0,0,3,7,1,0,0,0,0,0,0,6,7,5,0,0,0,0,0,0,1,7,3,5,7,0,0,0,0,0,0,0,6,7,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,
3,7,0,0,0,0,0,1,7,1,0,0,1,7,1,0,0,0,0,0,5,7,6,0,0,0,0,0,0,0,0,0,3,7,6,0,0,6,7,4,1,1,4,7,1,0,0,3,4,0,0,0,0,1,7,1,1,7,3,0,0,0,1,7,4,0,0,0,0,0,6,6,0,0,0,0,0,6,6,2,0,3,7,6,0,0,0,6,7,7,7,7,6,6,0,0,0,1,7,7,5,7,7,7,1,0,0,0,7,7,7,7,7,7,1,0,0,2,7,1,0,0,0,0,0,0,0,0,5,3,0,0,0,0,0,4,7,0,0,7,5,3,1,1,1,0,0,0,0,5,6,0,0,0,0,0,0,0,2,7,0,3,7,7,7,5,6,7,2,0,5,7,7,7,7,6,5,3,6,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,1,7,0,0,0,0,0,5,7,7,1,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,7,4,3,7,2,0,7,3,1,7,3,0,0,3,7,0,0,1,6,6,0,0,0,7,3,0,7,3,0,0,0,0,0,0,0,3,7,0,3,7,7,7,7,4,0,0,1,7,1,0,0,0,0,0,0,0,0,1,7,1,0,7,4,3,3,5,7,6,1,0,0,0,0,0,0,1,2,4,7,6,0,0,0,0,0,0,3,7,0,0,0,0,0,3,7,0,0,0,0,0,0,5,5,0,0,0,2,7,3,0,4,7,1,0,0,0,0,5,6,0,5,7,0,2,7,0,0,6,6,0,0,0,0,0,0,2,7,7,6,0,0,0,0,0,0,0,4,7,7,6,0,0,0,0,0,0,3,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,
2,7,1,0,0,0,0,3,7,0,0,0,1,7,1,0,0,0,0,6,6,2,0,0,0,0,0,0,0,0,0,0,0,3,7,1,1,7,7,7,7,7,7,7,7,5,0,0,0,0,0,0,0,1,7,1,1,7,1,0,0,0,0,5,5,0,0,0,0,2,7,2,0,0,0,0,2,7,1,0,0,0,3,7,0,0,0,0,2,3,3,1,7,4,0,0,0,7,7,7,7,5,5,7,3,0,0,0,7,4,1,1,4,6,7,2,0,3,7,0,0,0,0,0,0,0,0,0,5,3,0,0,0,0,0,3,7,0,0,7,3,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,3,7,0,2,3,0,0,0,5,6,0,0,5,7,3,1,0,0,0,0,5,5,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,3,7,0,0,0,0,0,5,6,7,6,1,0,0,0,0,5,5,0,0,0,0,0,0,0,2,7,2,1,7,3,4,7,0,0,7,4,0,0,3,7,0,0,0,1,7,6,0,0,7,3,0,7,3,0,0,0,0,0,0,0,6,6,0,3,7,1,1,0,0,0,0,1,7,2,0,0,0,0,0,0,0,0,2,7,1,0,7,7,7,7,7,4,0,0,0,0,0,0,0,0,0,0,0,1,7,3,0,0,0,0,0,3,7,0,0,0,0,0,2,7,0,0,0,0,0,0,7,4,0,0,0,0,7,5,0,6,6,0,0,0,0,0,4,7,1,7,4,0,1,7,2,1,7,4,0,0,0,0,0,1,7,6,3,7,3,0,0,0,0,0,0,0,6,7,1,0,0,0,0,0,0,6,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,
1,7,2,0,0,0,0,5,6,0,0,0,1,7,1,0,0,0,3,7,1,0,0,0,0,0,0,0,0,0,0,0,0,1,7,1,0,0,0,1,1,1,4,7,1,0,0,0,0,0,0,0,0,3,7,0,1,7,2,0,0,0,0,6,5,0,0,0,0,6,6,0,0,0,0,0,3,7,0,0,0,0,1,7,1,0,0,0,0,0,0,5,7,0,0,0,0,7,6,1,0,0,0,7,5,0,0,0,7,3,0,0,0,0,5,6,0,3,7,0,0,0,0,0,0,0,0,0,6,2,0,0,0,0,0,6,6,0,0,7,3,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,3,7,0,0,0,0,0,1,7,3,0,0,5,6,0,0,0,0,0,0,5,5,0,0,0,0,5,5,0,0,0,0,1,3,0,0,0,3,7,0,0,0,0,0,5,5,2,7,6,1,0,0,0,7,3,0,0,0,0,0,0,0,4,7,0,0,7,5,6,6,0,0,6,5,0,0,3,7,0,0,0,0,2,7,5,0,7,3,0,6,6,0,0,0,0,0,0,2,7,2,0,3,7,0,0,0,0,0,0,0,6,6,0,0,0,6,4,0,0,0,6,6,0,0,7,3,4,6,7,6,2,0,0,0,0,0,0,0,0,0,0,0,7,3,0,0,0,0,0,3,7,0,0,0,0,0,1,7,2,0,0,0,0,2,7,2,0,0,0,0,5,7,2,7,4,0,0,0,0,0,2,7,5,7,1,0,0,7,4,4,7,1,0,0,0,0,1,6,6,0,0,6,7,1,0,0,0,0,0,0,7,6,0,0,0,0,0,0,5,7,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,
0,6,6,0,0,0,1,7,3,0,0,0,0,7,3,0,0,0,5,6,0,0,0,0,0,0,0,0,6,3,0,0,0,3,7,0,0,0,0,0,0,0,3,7,0,0,0,3,4,0,0,0,1,6,6,0,0,6,6,0,0,0,1,7,3,0,0,0,0,7,4,0,0,0,0,0,3,7,1,0,0,0,3,7,0,0,0,0,0,0,5,7,4,0,0,0,4,7,3,0,0,0,0,6,6,0,0,0,7,3,0,0,0,1,6,6,0,0,7,3,0,0,0,2,6,5,0,0,7,1,0,0,0,0,1,7,3,0,0,7,3,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,2,7,1,0,0,0,1,6,6,0,0,0,7,5,0,0,0,0,0,0,4,6,0,0,0,0,5,5,0,0,0,0,3,7,0,0,0,4,5,0,0,0,0,0,5,5,0,2,7,6,1,0,0,7,3,0,0,0,0,0,0,0,6,6,0,0,6,7,7,4,0,0,5,7,0,0,3,7,0,0,0,0,0,2,7,5,7,3,0,2,7,5,0,0,0,0,1,6,6,0,0,3,7,0,0,0,0,0,0,0,3,7,2,0,0,6,7,5,0,5,7,3,0,0,7,1,0,0,3,6,7,5,0,0,5,6,0,0,0,0,0,3,7,1,0,0,0,0,0,3,7,0,0,0,0,0,0,6,6,0,0,0,0,6,6,0,0,0,0,0,3,7,6,7,1,0,0,0,0,0,0,7,7,6,0,0,0,6,5,6,6,0,0,0,0,0,6,6,1,0,0,0,7,6,0,0,0,0,0,3,7,1,0,0,0,0,0,2,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,
0,1,7,6,3,4,6,6,0,0,0,3,5,7,6,5,0,0,5,6,5,7,7,7,6,3,0,0,5,7,4,3,6,7,4,0,0,0,0,0,0,0,3,7,0,0,0,4,7,6,3,4,6,6,1,0,0,3,7,6,3,4,6,6,0,0,0,0,4,7,0,0,0,0,0,0,0,6,6,4,3,4,7,6,0,0,0,0,3,6,7,5,0,0,0,0,6,6,0,0,0,0,0,3,7,2,0,0,7,4,1,3,5,7,6,1,0,0,4,7,4,3,6,7,6,1,0,0,7,3,0,0,0,2,6,6,0,0,0,6,5,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,6,6,4,3,4,7,6,1,0,0,0,7,4,0,0,0,0,0,0,3,7,0,0,3,5,6,6,5,5,3,0,1,7,5,0,0,6,4,0,0,0,0,0,5,5,0,0,2,6,7,4,0,7,3,0,1,2,4,6,5,1,7,5,0,0,4,7,7,1,0,0,3,7,1,0,4,7,0,0,0,0,0,0,2,7,7,3,0,0,5,7,6,4,3,5,7,6,0,0,0,3,7,0,0,0,0,0,0,0,0,6,7,3,0,1,6,7,7,7,5,0,0,0,7,1,0,0,0,0,6,7,4,0,4,7,5,2,1,2,6,7,5,0,0,0,0,0,0,3,7,0,0,0,0,0,0,2,7,6,4,3,6,7,2,0,0,0,0,0,1,7,7,6,0,0,0,0,0,0,0,6,7,3,0,0,0,5,7,7,3,0,0,0,0,6,7,2,0,0,0,0,3,7,4,0,0,0,0,6,6,0,0,0,0,0,0,6,7,4,3,3,3,3,3,3,2,0,0,0,7,7,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,
0,0,2,6,7,7,5,0,0,0,0,3,5,5,5,5,0,0,2,5,5,3,3,3,4,3,0,0,0,3,6,7,6,3,0,0,0,0,0,0,0,0,2,6,0,0,0,0,3,6,7,6,4,0,0,0,0,0,3,6,7,6,4,0,0,0,0,0,5,4,0,0,0,0,0,0,0,1,5,7,7,6,3,0,0,0,1,7,7,6,2,0,0,0,0,0,5,2,0,0,0,0,0,0,5,1,0,0,6,7,7,7,6,4,0,0,0,0,0,3,6,7,6,3,0,0,0,0,5,7,7,7,7,7,6,0,0,0,0,3,7,7,7,7,7,7,6,0,0,5,5,0,0,0,0,0,0,0,0,0,5,7,7,6,3,0,0,0,0,0,7,3,0,0,0,0,0,0,3,6,0,1,7,7,5,5,5,5,3,0,0,2,7,7,5,7,1,0,0,0,0,0,5,5,0,0,0,0,5,7,1,6,7,7,7,7,7,5,2,1,7,3,0,0,2,7,6,0,0,0,2,7,3,0,4,6,0,0,0,0,0,0,0,2,6,1,0,0,0,1,5,7,7,6,3,0,0,0,0,3,6,0,0,0,0,0,0,0,0,0,6,7,6,5,6,7,7,7,0,0,0,0,6,1,0,0,0,0,0,4,2,0,0,4,6,7,7,7,6,3,0,0,0,0,0,0,0,2,4,0,0,0,0,0,0,0,1,5,7,7,6,2,0,0,0,0,0,0,0,6,7,3,0,0,0,0,0,0,0,5,7,1,0,0,0,2,7,7,0,0,0,0,0,6,2,0,0,0,0,0,0,6,7,1,0,0,1,7,1,0,0,0,0,0,1,7,7,7,7,7,7,7,7,7,6,0,0,0,7,7,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,1,0,0,0,0,0,0,1,3,3,3,3,3,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,3,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,1,3,3,2,1,0,0,0,0,3,0,0,0,0,1,0,0,0,0,0,5,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,5,5,3,4,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,7,6,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 };

//#define STRINT (GD_LEV / 8)    // string intensity ration
#define STRINT 2    // string intensity ration

// Starting x position of each character in the texture (because char witdth is not constant)
// These data must be adjusted depending of FontData
const short CharPos[CHAR_COUNT] = {0,11,18,28,37,47,57,66,77,86,96,108,117,128,139,149,158,170,182,190,202,211,220,234,247,259,268,282,292,303,314,326,337,353,364,375,386,394,400,408,417,424,RAW_X};

// convert asscii code to index in FontData
const unsigned char ChConvert[256] = 
{
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 
  40, 40, 40, 40, 40, 40, 40, 38, 40, 40, 40, 40, 37, 40, 36, 40, 
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 39, 41, 40, 40, 40, 40, 
  40, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
  25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 40, 40, 40, 40, 
  40, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
  25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 40, 40, 40, 40, 
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 
  40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40
};

// return text total width (use for centering text)
int CFont::TextWidth(char *Text)
{
  int w, c, i;

  w = 0;
  i = 0;
  c = Text[i];
  while (c)
  {
    if (c=='|')
      return w;

    int Index = ChConvert[c];

    w += CharPos[Index+1] - CharPos[Index];
    i++;
    c = Text[i];
  }
  return w;
}

// display horizontal text
void CFont::DrawTextH(int xd, int yd, int Intensity, char *Text, int* vScreen,int screenx,int screeny,int Center)
{
  int c, y, Start, Stop;

  if (Center)
    xd = (screenx - TextWidth(Text))>>1;     // center text

  c = *(Text++);

  if (xd < 0)
    xd = 0;

  if (yd < 0)
    yd = 0;

  if ((yd + FONT_Y) > screeny)
    return;

  while (c)
  {
    if (c=='|')
      return;

    int Index = ChConvert[c];

    Start = CharPos[Index];
    Stop  = CharPos[Index+1];
    int w = Stop - Start;

    int offp = (yd*screenx) + xd;

    xd += w;
    if (xd > screenx)
      return;


    for (y=0; y<FONT_Y; y++)
    {
      int i = Start; 
      while (i < Stop)
      {
        short col = FontData[y*RAW_X + i++];
        if (col)
            vScreen[offp] = 0xfff8;
        offp++;
      }
      offp += screenx - w;
    }
    c = *(Text++);
  }
}



// ----------------------------------------------
static const int Pow10[6] = { 1000000, 100000, 10000, 1000, 100, 10 };       // for binairy -> decimal convertion

// same as itoa, but more fast
void Lib3D::IntToStr(int a, char *aStr)
{
  int l, d, s;

  l = 0;
  s = 0;

  if (a < 0)
  {
    aStr[l++] = 'n';   // todo: add '-' character in font
    a = -a;
  }

  for (int i=0; i<6; i++)
  {
    d = a / Pow10[i];
    if (d)
    {
      s = 1;
      a -= d*Pow10[i];
    }
    if (s) 
      aStr[l++] = '0' + d;
  }
 
  aStr[l++] = '0' + a;
  aStr[l] = 0;
}

#endif